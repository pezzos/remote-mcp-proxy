services:
{{- if eq (getenv "ENABLE_LOCAL_TRAEFIK") "true" }}
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    command:
      - --api.dashboard=true
      - --api.insecure=true
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.file.filename=/etc/traefik/dynamic.yml
      - --providers.file.watch=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL:-admin@${DOMAIN}}
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --log.level=INFO
      - --accesslog=true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - traefik-letsencrypt:/letsencrypt
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik.entrypoints=websecure
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=myresolver
      - traefik.http.routers.traefik.service=api@internal

{{- end }}
  remote-mcp-proxy:
    image: remote-mcp-proxy:latest
    build: .
    container_name: remote-mcp-proxy
    restart: unless-stopped
    volumes:
      - ./config.json:/app/config.json:ro
      - ./logs:/app/logs
      - npm-cache:/root/.npm
      - mcp-data:/app/mcp-data
      - sessions-data:/app/sessions
    read_only: true
    tmpfs:
      - /tmp:exec
    cap_drop:
      - ALL
    security_opt:
      - no-new-privileges:true
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    environment:
      - GO_ENV=production
      - DOMAIN=${DOMAIN}
      - LOG_LEVEL_SYSTEM=${LOG_LEVEL_SYSTEM:-INFO}
      - LOG_LEVEL_MCP=${LOG_LEVEL_MCP:-DEBUG}
      - LOG_RETENTION_SYSTEM=${LOG_RETENTION_SYSTEM:-24h}
      - LOG_RETENTION_MCP=${LOG_RETENTION_MCP:-12h}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - proxy
{{- if eq (getenv "ENABLE_LOCAL_TRAEFIK") "true" }}
    depends_on:
      - traefik
{{- end }}
    labels:
      - traefik.enable=true
      - traefik.docker.network=proxy
{{- range $name, $serverConfig := (ds "config").mcpServers }}
      # {{ $name }} MCP server routing
      - traefik.http.routers.{{ $name }}-mcp.rule=Host(`{{ $name }}.mcp.${DOMAIN}`)
      - traefik.http.routers.{{ $name }}-mcp.entrypoints=websecure
      - traefik.http.routers.{{ $name }}-mcp.tls=true
      - traefik.http.routers.{{ $name }}-mcp.tls.certresolver=myresolver
      - traefik.http.routers.{{ $name }}-mcp.service={{ $name }}-mcp-service
      - traefik.http.services.{{ $name }}-mcp-service.loadbalancer.server.port=8080
{{- end }}

networks:
  proxy:
{{- if eq (getenv "ENABLE_LOCAL_TRAEFIK") "true" }}
    driver: bridge
{{- else }}
    external: true
{{- end }}

volumes:
  npm-cache:
    driver: local
  mcp-data:
    driver: local
  sessions-data:
    driver: local
{{- if eq (getenv "ENABLE_LOCAL_TRAEFIK") "true" }}
  traefik-letsencrypt:
    driver: local
{{- end }}